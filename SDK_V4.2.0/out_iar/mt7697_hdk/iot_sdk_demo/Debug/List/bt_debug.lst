###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.1.11864/W32 for ARM       25/Jan/2017  17:34:47
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\middleware\MTK\bluetooth\src\bt_debug.c
#    Command line =  
#        "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\middleware\MTK\bluetooth\src\bt_debug.c" -D
#        MTK_LOAD_MAC_ADDR_FROM_EFUSE -D MTK_PING_OUT_ENABLE -D
#        MTK_WIFI_PROFILE_ENABLE -D PCFG_OS=2 -D _REENT_SMALL -D
#        MTK_MINISUPP_ENABLE -D MTK_MINICLI_ENABLE -D MTK_BSPEXT_ENABLE -D
#        MTK_HAL_LOWPOWER_ENABLE -D MTK_LWIP_ENABLE -D
#        MTK_HTTPCLIENT_SSL_ENABLE -D MTK_IPERF_ENABLE -D PRODUCT_VERSION=7697
#        -D MTK_WIFI_TGN_VERIFY_ENABLE -D MTK_SMTCN_ENABLE -D
#        MTK_CLI_TEST_MODE_ENABLE -D MTK_WIFI_REPEATER_ENABLE -D
#        CONFIG_REPEATER -D MTK_DEBUG_LEVEL_INFO -D MTK_DEBUG_LEVEL_WARNING -D
#        MTK_DEBUG_LEVEL_ERROR -D configOVERRIDE_DEFAULT_TICK_CONFIGURATION -D
#        CFG_SUPPORT_SMNT_PROTO=2 -D BT_DEBUG -D MTK_BLE_CLI_ENABLE -D
#        MTK_BLE_BQB_CLI_ENABLE -D MTK_HCI_CONSOLE_MIX_ENABLE -D
#        MTK_BLE_BQB_TEST_ENABLE -D MTK_BLE_SMTCN_ENABLE -D SUPPORT_MBEDTLS -D
#        MBEDTLS_CONFIG_FILE=<config-mtk-basic.h> -D MTK_NVDM_ENABLE -D
#        MTK_WIFI_PRIVILEGE_ENABLE -D MTK_MCS_ENABLE -D MTK_BLE_GPIO_SERVICE -D
#        __BT_DEBUG__ -lcN "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\out_iar\mt7697_hdk\iot_sdk_demo\Debug\List" -lA
#        "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\out_iar\mt7697_hdk\iot_sdk_demo\Debug\List"
#        --diag_suppress Pa050,Ta022,Ta023 --diag_error Pe606 -o
#        "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\out_iar\mt7697_hdk\iot_sdk_demo\Debug\Obj" --no_unroll
#        --no_inline --no_tbaa --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\inc\" -I
#        "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\kernel\service\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\kernel\rtos\FreeRTOS\Source\include\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\kernel\rtos\FreeRTOS\Source\portable\IAR\ARM_CM4F\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\kernel\rtos\FreeRTOS\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\CMSIS\Device\MTK\mt7687\Include\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\CMSIS\Include\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\chip\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\chip\mt7687\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\board\mt76x7_hdk\wifi\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\third_party\dhcpd\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\MTK\minicli\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\MTK\minisupp\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\chip\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\chip\mt7687\src\common\include\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\third_party\lwip\src\include\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\third_party\lwip\ports\include\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\third_party\lwip\src\include\lwip\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\project\common\bsp_ex\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\MTK\nvdm\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\third_party\ping\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\MTK\smtcn\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\MTK\iperf\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\project\mt7697_hdk\apps\iot_sdk_demo\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\chip\mt7687\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\board\mt76x7_hdk\util\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\board\mt76x7_hdk\wifi\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\MTK\bluetooth\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\project\mt7697_hdk\apps\iot_sdk_demo\src\ut_app\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\board\mt76x7_hdk\ept\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\third_party\mbedtls\include\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\third_party\mbedtls\configs\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\driver\board\mt76x7_hdk\external_flash\inc\"
#        -I "C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\project\mt7697_hdk\apps\iot_sdk_demo\EWARM\..\..\..\..\..\middleware\third_party\httpclient\inc\"
#        -Om -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_CHN.936
#    List file    =  
#        C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\out_iar\mt7697_hdk\iot_sdk_demo\Debug\List\bt_debug.lst
#    Object file  =  
#        C:\LEO\myGit\MTK
#        IOT\SDK_V4.2.0\out_iar\mt7697_hdk\iot_sdk_demo\Debug\Obj\bt_debug.o
#
###############################################################################

C:\LEO\myGit\MTK IOT\SDK_V4.2.0\middleware\MTK\bluetooth\src\bt_debug.c
      1          /* Copyright Statement:
      2           *
      3           * (C) 2005-2016  MediaTek Inc. All rights reserved.
      4           *
      5           * This software/firmware and related documentation ("MediaTek Software") are
      6           * protected under relevant copyright laws. The information contained herein
      7           * is confidential and proprietary to MediaTek Inc. ("MediaTek") and/or its licensors.
      8           * Without the prior written permission of MediaTek and/or its licensors,
      9           * any reproduction, modification, use or disclosure of MediaTek Software,
     10           * and information contained herein, in whole or in part, shall be strictly prohibited.
     11           * You may only use, reproduce, modify, or distribute (as applicable) MediaTek Software
     12           * if you have agreed to and been bound by the applicable license agreement with
     13           * MediaTek ("License Agreement") and been granted explicit permission to do so within
     14           * the License Agreement ("Permitted User").  If you are not a Permitted User,
     15           * please cease any access or use of MediaTek Software immediately.
     16           * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
     17           * THAT MEDIATEK SOFTWARE RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES
     18           * ARE PROVIDED TO RECEIVER ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
     19           * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
     20           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
     21           * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
     22           * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
     23           * SUPPLIED WITH MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
     24           * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
     25           * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
     26           * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
     27           * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
     28           * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
     29           * CUMULATIVE LIABILITY WITH RESPECT TO MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
     30           * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE MEDIATEK SOFTWARE AT ISSUE,
     31           * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
     32           * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
     33           */
     34          
     35          #include "bt_type.h"
     36          #include "bt_debug.h"
     37          #include "syslog.h"
     38          
     39          #ifdef __BT_DEBUG__
     40          log_create_module(BT, PRINT_LEVEL_INFO);
     41          log_create_module(BTMM, PRINT_LEVEL_INFO);
     42          log_create_module(BTHCI, PRINT_LEVEL_INFO);
     43          log_create_module(BTL2CAP, PRINT_LEVEL_INFO);
     44          log_create_module(BTRFCOMM, PRINT_LEVEL_INFO);
     45          log_create_module(BTSPP, PRINT_LEVEL_INFO);
     46          //log_create_module(BTIF, PRINT_LEVEL_INFO);
     47          log_control_block_t log_control_block_BTIF={
     48          	"BTIF",
     49          	(DEBUG_LOG_OFF),
     50          	(PRINT_LEVEL_INFO),
     51          	print_module_log,
     52          	dump_module_buffer
     53          };
     54          
     55          //#define BT_DEBUG_NO_BTIF
     56          #define BT_DEBUG_BUFF_SIZE  150
     57          static char bt_debug_buff[BT_DEBUG_BUFF_SIZE];
     58          void bt_debug_log(const char *format, ...)
     59          {
     60              va_list arg;
     61          
     62              if ( 0
     63          #ifdef BT_DEBUG_NO_MM
     64                  || strstr(format, "[MM]")
     65          #endif
     66          #ifdef BT_DEBUG_NO_TIMER
     67                  || strstr(format, "[TIMER]")
     68          #endif
     69          #ifdef BT_DEBUG_NO_HCI
     70                  || strstr(format, "[HCI]")
     71          #endif
     72          #ifdef BT_DEBUG_NO_BTIF
     73                  || strstr(format, "BTIF")
     74          #endif
     75          #ifdef BT_DEBUG_NO_GAP
     76                  || strstr(format, "[GAP]")
     77          #endif
     78          #ifdef BT_DEBUG_NO_A2DP
     79                  || strstr(format, "[A2DP]")
     80          #endif
     81          #ifdef BT_DEBUG_NO_AVDTP
     82                  || strstr(format, "[AVDTP]")
     83          #endif
     84          
     85          #ifdef BT_DEBUG_NO_I
     86                  || strstr(format, "[I]")
     87          #endif
     88          #ifdef BT_DEBUG_NO_D
     89                  || strstr(format, "[D]")
     90          #endif
     91                  ) {
     92                  return;
     93              }
     94          
     95              va_start(arg, format);
     96              vsnprintf(bt_debug_buff, 150, format, arg);
     97              va_end(arg);
     98              if (strstr(bt_debug_buff, "[MM]")) {
     99                  LOG_I(BTMM, "%s", bt_debug_buff);
    100              } else if (strstr(bt_debug_buff, "[RFCOMM]")) {
    101                  LOG_I(BTRFCOMM, "%s", bt_debug_buff);
    102              } else if (strstr(bt_debug_buff, "[SPP]")) {
    103                  LOG_I(BTSPP, "%s", bt_debug_buff);
    104              } else if (strstr(bt_debug_buff, "[L2CAP]")) {
    105                  LOG_I(BTL2CAP, "%s", bt_debug_buff);
    106              } else if (strstr(bt_debug_buff, "[HCI]")) {
    107                  LOG_I(BTHCI, "%s", bt_debug_buff);
    108              }  else if (strstr(bt_debug_buff, "[BTIF]")) {
    109                  LOG_I(BTIF, "%s", bt_debug_buff);
    110              } 
    111              else {
    112                  LOG_I(BT, "%s", bt_debug_buff);
    113              }
    114          }
    115          
    116          const char *bt_debug_bd_addr2str(const bt_bd_addr_t addr)
    117          {
    118              snprintf(bt_debug_buff, BT_DEBUG_BUFF_SIZE, "%02x-%02x-%02x-%02x-%02x-%02x",
    119                      addr[5], addr[4], addr[3], addr[2], addr[1], addr[0]);
    120              return bt_debug_buff;
    121          }
    122          
    123          const char *bt_debug_bd_addr2str2(const bt_bd_addr_t addr)
    124          {
    125              snprintf(bt_debug_buff, BT_DEBUG_BUFF_SIZE, "LAP: %02x-%02x-%02x, UAP: %02x, NAP: %02x-%02x",
    126                      addr[2], addr[1], addr[0], addr[3], addr[5], addr[4]);
    127              return bt_debug_buff;
    128          }
    129          
    130          const char *bt_debug_addr2str(const bt_addr_t *p)
    131          {
    132              bt_bd_addr_ptr_t addr = p->addr;
    133              snprintf(bt_debug_buff, BT_DEBUG_BUFF_SIZE, "[%s%s] %02x-%02x-%02x-%02x-%02x-%02x",
    134                      (p->type & 0x01) == BT_ADDR_PUBLIC ? "PUBLIC" : "RANDOM",
    135                       p->type >=2 ?"_IDENTITY":"",
    136                      addr[5], addr[4], addr[3], addr[2], addr[1], addr[0]);
    137              return bt_debug_buff;
    138          }
    139          
    140          const char *bt_debug_addr2str2(const bt_addr_t *p)
    141          {
    142              bt_bd_addr_ptr_t addr = p->addr;
    143              snprintf(bt_debug_buff, BT_DEBUG_BUFF_SIZE, "[%s%s] LAP: %02x-%02x-%02x, UAP: %02x, NAP: %02x-%02x",
    144                      (p->type & 0x01) == BT_ADDR_PUBLIC ? "PUBLIC" : "RANDOM",
    145                       p->type >=2 ?"_IDENTITY":"",
    146                      addr[2], addr[1], addr[0], addr[3], addr[5], addr[4]);
    147              return bt_debug_buff;
    148          }
    149          
    150          #endif /* BT_DEBUG */
    151          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   bt_debug_addr2str
        40   -> snprintf
      40   bt_debug_addr2str2
        40   -> snprintf
      32   bt_debug_bd_addr2str
        32   -> snprintf
      32   bt_debug_bd_addr2str2
        32   -> snprintf
      40   bt_debug_log
        40   -- Indirect call
        40   -> strstr
        40   -> vsnprintf
       0   strstr
         0   -> __iar_Strstr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_2
       4  ?_0
       8  ?_1
       8  ?_10
       8  ?_11
       8  ?_12
       8  ?_13
      32  ?_14
      48  ?_15
      40  ?_16
       8  ?_17
       8  ?_18
      12  ?_19
       8  ?_2
       1  ?_20
      56  ?_21
       8  ?_3
      12  ?_4
       8  ?_5
       8  ?_6
       8  ?_7
       4  ?_8
      12  ?_9
      82  bt_debug_addr2str
      82  bt_debug_addr2str2
      50  bt_debug_bd_addr2str
      50  bt_debug_bd_addr2str2
     286  bt_debug_log
     264  log_control_block_BT
          log_control_block_BTMM
          log_control_block_BTHCI
          log_control_block_BTL2CAP
          log_control_block_BTRFCOMM
          log_control_block_BTSPP
          log_control_block_BTIF
          bt_debug_buff
       4  strstr
      16  -- Other

 
 264 bytes in section .data
  61 bytes in section .rodata
 838 bytes in section .text
 
 834 bytes of CODE  memory (+ 4 bytes shared)
  61 bytes of CONST memory
 264 bytes of DATA  memory

Errors: none
Warnings: none
